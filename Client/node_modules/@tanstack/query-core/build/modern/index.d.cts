export { I as AnyDataTag, b0 as CancelOptions, C as CancelledError, J as DataTag, z as DefaultError, a$ as DefaultOptions, ae as DefaultedInfiniteQueryObserverOptions, ac as DefaultedQueryObserverOptions, aJ as DefinedInfiniteQueryObserverResult, aA as DefinedQueryObserverResult, D as DehydrateOptions, x as DehydratedState, V as Enabled, ah as EnsureInfiniteQueryDataOptions, ag as EnsureQueryDataOptions, ai as FetchInfiniteQueryOptions, ap as FetchNextPageOptions, aq as FetchPreviousPageOptions, af as FetchQueryOptions, as as FetchStatus, a1 as GetNextPageParamFunction, a0 as GetPreviousPageParamFunction, H as HydrateOptions, K as InferDataFromTag, L as InferErrorFromTag, a2 as InfiniteData, aC as InfiniteQueryObserverBaseResult, aF as InfiniteQueryObserverLoadingErrorResult, aE as InfiniteQueryObserverLoadingResult, ad as InfiniteQueryObserverOptions, aD as InfiniteQueryObserverPendingResult, aI as InfiniteQueryObserverPlaceholderResult, aG as InfiniteQueryObserverRefetchErrorResult, aK as InfiniteQueryObserverResult, aH as InfiniteQueryObserverSuccessResult, a8 as InfiniteQueryPageParamsOptions, Y as InitialDataFunction, a7 as InitialPageParam, an as InvalidateOptions, al as InvalidateQueryFilters, aT as MutateFunction, aS as MutateOptions, w as Mutation, M as MutationCache, d as MutationCacheNotifyEvent, g as MutationFilters, aP as MutationFunction, aL as MutationKey, aO as MutationMeta, e as MutationObserver, aU as MutationObserverBaseResult, aX as MutationObserverErrorResult, aV as MutationObserverIdleResult, aW as MutationObserverLoadingResult, aR as MutationObserverOptions, aZ as MutationObserverResult, aY as MutationObserverSuccessResult, aQ as MutationOptions, aN as MutationScope, v as MutationState, aM as MutationStatus, a4 as NetworkMode, N as NoInfer, b3 as NotifyEvent, b2 as NotifyEventType, a5 as NotifyOnChangeProps, O as OmitKeyof, y as Override, Z as PlaceholderDataFunction, _ as QueriesPlaceholderDataFunction, u as Query, Q as QueryCache, a as QueryCacheNotifyEvent, b as QueryClient, a_ as QueryClientConfig, j as QueryFilters, P as QueryFunction, X as QueryFunctionContext, A as QueryKey, $ as QueryKeyHashFunction, a3 as QueryMeta, c as QueryObserver, at as QueryObserverBaseResult, aw as QueryObserverLoadingErrorResult, av as QueryObserverLoadingResult, aa as QueryObserverOptions, au as QueryObserverPendingResult, az as QueryObserverPlaceholderResult, ax as QueryObserverRefetchErrorResult, aB as QueryObserverResult, ay as QueryObserverSuccessResult, a6 as QueryOptions, W as QueryPersister, t as QueryState, ar as QueryStatus, ak as RefetchOptions, am as RefetchQueryFilters, R as Register, ao as ResetOptions, aj as ResultOptions, b1 as SetDataOptions, S as SkipToken, T as StaleTime, a9 as ThrowOnError, G as UnsetMarker, U as Updater, ab as WithRequired, E as dataTagErrorSymbol, B as dataTagSymbol, q as defaultShouldDehydrateMutation, p as defaultShouldDehydrateQuery, n as dehydrate, h as hashKey, o as hydrate, l as isCancelledError, i as isServer, k as keepPreviousData, f as matchMutation, m as matchQuery, r as replaceEqualDeep, s as skipToken, F as unsetMarker } from './hydration-DgVqMV9G.cjs';
export { QueriesObserver, QueriesObserverOptions } from './queriesObserver.cjs';
export { InfiniteQueryObserver } from './infiniteQueryObserver.cjs';
export { defaultScheduler, notifyManager } from './notifyManager.cjs';
export { focusManager } from './focusManager.cjs';
export { onlineManager } from './onlineManager.cjs';
export { streamedQuery as experimental_streamedQuery } from './streamedQuery.cjs';
import './removable.cjs';
import './subscribable.cjs';
